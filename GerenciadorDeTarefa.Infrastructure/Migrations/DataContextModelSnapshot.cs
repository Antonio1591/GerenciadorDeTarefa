// <auto-generated />
using GerenciadorDeTarefa.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace GerenciadorDeTarefa.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GerenciadorDeTarefa.Domain.Model.CategoriaTarefa", b =>
                {
                    b.Property<int>("idCategoriaTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria_tarefa");

                    b.Property<string>("CategoriaTarefaDescricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("categoria_tarefa_descricao");

                    b.Property<int>("EnumCategoriaTarefa")
                        .HasColumnType("int")
                        .HasColumnName("enum_categoria_tarefa");

                    b.HasKey("idCategoriaTarefa")
                        .HasName("pk_categoria_tarefas");

                    b.ToTable("categoria_tarefas", (string)null);
                });

            modelBuilder.Entity("GerenciadorDeTarefa.Domain.Model.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pessoa");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cpf");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("PessoaNome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pessoa_nome");

                    b.Property<string>("PessoaSex")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pessoa_sex");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefone");

                    b.HasKey("IdPessoa")
                        .HasName("pk_pessoa");

                    b.ToTable("pessoa", (string)null);
                });

            modelBuilder.Entity("GerenciadorDeTarefa.Domain.Model.PrioridadeTarefa", b =>
                {
                    b.Property<int>("IdPrioridadeTarefa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_prioridade_tarefa");

                    b.Property<int>("EnumPrioridadeEnum")
                        .HasColumnType("int")
                        .HasColumnName("enum_prioridade_enum");

                    b.Property<string>("PrioridadeDescriscao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("prioridade_descriscao");

                    b.HasKey("IdPrioridadeTarefa")
                        .HasName("pk_prioridade_tarefa");

                    b.ToTable("prioridade_tarefa", (string)null);
                });

            modelBuilder.Entity("GerenciadorDeTarefa.Domain.Model.Tarefa", b =>
                {
                    b.Property<int>("TarefaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tarefa_id");

                    b.Property<int>("CategoriaTarefaidCategoriaTarefa")
                        .HasColumnType("int")
                        .HasColumnName("categoria_tarefaid_categoria_tarefa");

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_conclusao");

                    b.Property<DateTime>("DataConclusaoEsperada")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_conclusao_esperada");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_inicio");

                    b.Property<int>("PrioridadeTarefaIdPrioridadeTarefa")
                        .HasColumnType("int")
                        .HasColumnName("prioridade_tarefa_id_prioridade_tarefa");

                    b.Property<int>("ResponsavelTarefaIdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("responsavel_tarefa_id_pessoa");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<bool>("TarefaConcluida")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tarefa_concluida");

                    b.Property<string>("TarefaDescriscao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tarefa_descriscao");

                    b.HasKey("TarefaId")
                        .HasName("pk_tarefa");

                    b.HasIndex("CategoriaTarefaidCategoriaTarefa")
                        .HasDatabaseName("ix_tarefa_categoria_tarefaid_categoria_tarefa");

                    b.HasIndex("PrioridadeTarefaIdPrioridadeTarefa")
                        .HasDatabaseName("ix_tarefa_prioridade_tarefa_id_prioridade_tarefa");

                    b.HasIndex("ResponsavelTarefaIdPessoa")
                        .HasDatabaseName("ix_tarefa_responsavel_tarefa_id_pessoa");

                    b.ToTable("tarefa", (string)null);
                });

            modelBuilder.Entity("GerenciadorDeTarefa.Domain.Model.Tarefa", b =>
                {
                    b.HasOne("GerenciadorDeTarefa.Domain.Model.CategoriaTarefa", "CategoriaTarefa")
                        .WithMany()
                        .HasForeignKey("CategoriaTarefaidCategoriaTarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tarefa_categoria_tarefas_categoria_tarefaid_categoria_tarefa");

                    b.HasOne("GerenciadorDeTarefa.Domain.Model.PrioridadeTarefa", "PrioridadeTarefa")
                        .WithMany()
                        .HasForeignKey("PrioridadeTarefaIdPrioridadeTarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tarefa_prioridade_tarefa_prioridade_tarefa_id_prioridade_tar");

                    b.HasOne("GerenciadorDeTarefa.Domain.Model.Pessoa", "ResponsavelTarefa")
                        .WithMany()
                        .HasForeignKey("ResponsavelTarefaIdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tarefa_pessoa_responsavel_tarefa_id_pessoa");

                    b.Navigation("CategoriaTarefa");

                    b.Navigation("PrioridadeTarefa");

                    b.Navigation("ResponsavelTarefa");
                });
#pragma warning restore 612, 618
        }
    }
}
